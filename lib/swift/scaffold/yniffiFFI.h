// This file was autogenerated by some hot garbage in the `uniffi` crate.
// Trust me, you don't want to mess with it!

#pragma once

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

// The following structs are used to implement the lowest level
// of the FFI, and thus useful to multiple uniffied crates.
// We ensure they are declared exactly once, with a header guard, UNIFFI_SHARED_H.
#ifdef UNIFFI_SHARED_H
    // We also try to prevent mixing versions of shared uniffi header structs.
    // If you add anything to the #else block, you must increment the version suffix in UNIFFI_SHARED_HEADER_V4
    #ifndef UNIFFI_SHARED_HEADER_V4
        #error Combining helper code from multiple versions of uniffi is not supported
    #endif // ndef UNIFFI_SHARED_HEADER_V4
#else
#define UNIFFI_SHARED_H
#define UNIFFI_SHARED_HEADER_V4
// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V4 in this file.           ⚠️

typedef struct RustBuffer
{
    int32_t capacity;
    int32_t len;
    uint8_t *_Nullable data;
} RustBuffer;

typedef int32_t (*ForeignCallback)(uint64_t, int32_t, const uint8_t *_Nonnull, int32_t, RustBuffer *_Nonnull);

typedef struct ForeignBytes
{
    int32_t len;
    const uint8_t *_Nullable data;
} ForeignBytes;

// Error definitions
typedef struct RustCallStatus {
    int8_t code;
    RustBuffer errorBuf;
} RustCallStatus;

// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V4 in this file.           ⚠️
#endif // def UNIFFI_SHARED_H

// Continuation callback for UniFFI Futures
typedef void (*UniFfiRustFutureContinuation)(void * _Nonnull, int8_t);

// Scaffolding functions
void*_Nonnull uniffi_uniffi_yniffi_fn_clone_ysubscription(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_free_ysubscription(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_uniffi_yniffi_fn_clone_yrsarray(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_free_yrsarray(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrsarray_each(void*_Nonnull ptr, void*_Nonnull tx, uint64_t delegate, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_uniffi_yniffi_fn_method_yrsarray_get(void*_Nonnull ptr, void*_Nonnull tx, uint32_t index, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrsarray_insert(void*_Nonnull ptr, void*_Nonnull tx, uint32_t index, RustBuffer value, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrsarray_insert_range(void*_Nonnull ptr, void*_Nonnull tx, uint32_t index, RustBuffer values, RustCallStatus *_Nonnull out_status
);
uint32_t uniffi_uniffi_yniffi_fn_method_yrsarray_length(void*_Nonnull ptr, void*_Nonnull tx, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_uniffi_yniffi_fn_method_yrsarray_observe(void*_Nonnull ptr, uint64_t delegate, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrsarray_push_back(void*_Nonnull ptr, void*_Nonnull tx, RustBuffer value, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrsarray_push_front(void*_Nonnull ptr, void*_Nonnull tx, RustBuffer value, RustCallStatus *_Nonnull out_status
);
uint64_t uniffi_uniffi_yniffi_fn_method_yrsarray_raw_ptr(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrsarray_remove(void*_Nonnull ptr, void*_Nonnull tx, uint32_t index, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrsarray_remove_range(void*_Nonnull ptr, void*_Nonnull tx, uint32_t index, uint32_t len, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_uniffi_yniffi_fn_method_yrsarray_to_a(void*_Nonnull ptr, void*_Nonnull tx, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_uniffi_yniffi_fn_clone_yrsdoc(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_free_yrsdoc(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_uniffi_yniffi_fn_constructor_yrsdoc_new(RustCallStatus *_Nonnull out_status
    
);
RustBuffer uniffi_uniffi_yniffi_fn_method_yrsdoc_encode_diff_v1(void*_Nonnull ptr, void*_Nonnull tx, RustBuffer state_vector, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_uniffi_yniffi_fn_method_yrsdoc_get_array(void*_Nonnull ptr, RustBuffer name, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_uniffi_yniffi_fn_method_yrsdoc_get_map(void*_Nonnull ptr, RustBuffer name, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_uniffi_yniffi_fn_method_yrsdoc_get_text(void*_Nonnull ptr, RustBuffer name, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_uniffi_yniffi_fn_method_yrsdoc_transact(void*_Nonnull ptr, RustBuffer origin, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_uniffi_yniffi_fn_method_yrsdoc_undo_manager(void*_Nonnull ptr, RustBuffer tracked_refs, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_uniffi_yniffi_fn_clone_yrsmap(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_free_yrsmap(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrsmap_clear(void*_Nonnull ptr, void*_Nonnull tx, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_uniffi_yniffi_fn_method_yrsmap_contains_key(void*_Nonnull ptr, void*_Nonnull tx, RustBuffer key, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrsmap_each(void*_Nonnull ptr, void*_Nonnull tx, uint64_t delegate, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_uniffi_yniffi_fn_method_yrsmap_get(void*_Nonnull ptr, void*_Nonnull tx, RustBuffer key, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrsmap_insert(void*_Nonnull ptr, void*_Nonnull tx, RustBuffer key, RustBuffer value, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrsmap_keys(void*_Nonnull ptr, void*_Nonnull tx, uint64_t delegate, RustCallStatus *_Nonnull out_status
);
uint32_t uniffi_uniffi_yniffi_fn_method_yrsmap_length(void*_Nonnull ptr, void*_Nonnull tx, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_uniffi_yniffi_fn_method_yrsmap_observe(void*_Nonnull ptr, uint64_t delegate, RustCallStatus *_Nonnull out_status
);
uint64_t uniffi_uniffi_yniffi_fn_method_yrsmap_raw_ptr(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_uniffi_yniffi_fn_method_yrsmap_remove(void*_Nonnull ptr, void*_Nonnull tx, RustBuffer key, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrsmap_values(void*_Nonnull ptr, void*_Nonnull tx, uint64_t delegate, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_uniffi_yniffi_fn_clone_yrstext(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_free_yrstext(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrstext_append(void*_Nonnull ptr, void*_Nonnull tx, RustBuffer text, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrstext_format(void*_Nonnull ptr, void*_Nonnull tx, uint32_t index, uint32_t length, RustBuffer attrs, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_uniffi_yniffi_fn_method_yrstext_get_string(void*_Nonnull ptr, void*_Nonnull tx, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrstext_insert(void*_Nonnull ptr, void*_Nonnull tx, uint32_t index, RustBuffer chunk, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrstext_insert_embed(void*_Nonnull ptr, void*_Nonnull tx, uint32_t index, RustBuffer content, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrstext_insert_embed_with_attributes(void*_Nonnull ptr, void*_Nonnull tx, uint32_t index, RustBuffer content, RustBuffer attrs, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrstext_insert_with_attributes(void*_Nonnull ptr, void*_Nonnull tx, uint32_t index, RustBuffer chunk, RustBuffer attrs, RustCallStatus *_Nonnull out_status
);
uint32_t uniffi_uniffi_yniffi_fn_method_yrstext_length(void*_Nonnull ptr, void*_Nonnull tx, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_uniffi_yniffi_fn_method_yrstext_observe(void*_Nonnull ptr, uint64_t delegate, RustCallStatus *_Nonnull out_status
);
uint64_t uniffi_uniffi_yniffi_fn_method_yrstext_raw_ptr(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrstext_remove_range(void*_Nonnull ptr, void*_Nonnull tx, uint32_t start, uint32_t length, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_uniffi_yniffi_fn_clone_yrstransaction(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_free_yrstransaction(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrstransaction_free(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_uniffi_yniffi_fn_method_yrstransaction_origin(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrstransaction_transaction_apply_update(void*_Nonnull ptr, RustBuffer update, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_uniffi_yniffi_fn_method_yrstransaction_transaction_encode_state_as_update(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_uniffi_yniffi_fn_method_yrstransaction_transaction_encode_state_as_update_from_sv(void*_Nonnull ptr, RustBuffer state_vector, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_uniffi_yniffi_fn_method_yrstransaction_transaction_encode_update(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_uniffi_yniffi_fn_method_yrstransaction_transaction_get_array(void*_Nonnull ptr, RustBuffer name, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_uniffi_yniffi_fn_method_yrstransaction_transaction_get_map(void*_Nonnull ptr, RustBuffer name, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_uniffi_yniffi_fn_method_yrstransaction_transaction_get_text(void*_Nonnull ptr, RustBuffer name, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_uniffi_yniffi_fn_method_yrstransaction_transaction_state_vector(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_uniffi_yniffi_fn_clone_yrsundoevent(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_free_yrsundoevent(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_uniffi_yniffi_fn_method_yrsundoevent_has_changed(void*_Nonnull ptr, uint64_t shared_ref, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_uniffi_yniffi_fn_method_yrsundoevent_kind(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_uniffi_yniffi_fn_method_yrsundoevent_origin(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_uniffi_yniffi_fn_clone_yrsundomanager(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_free_yrsundomanager(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrsundomanager_add_origin(void*_Nonnull ptr, RustBuffer origin, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrsundomanager_add_scope(void*_Nonnull ptr, uint64_t tracked_ref, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrsundomanager_clear(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_uniffi_yniffi_fn_method_yrsundomanager_observe_added(void*_Nonnull ptr, uint64_t delegate, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_uniffi_yniffi_fn_method_yrsundomanager_observe_popped(void*_Nonnull ptr, uint64_t delegate, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_uniffi_yniffi_fn_method_yrsundomanager_observe_updated(void*_Nonnull ptr, uint64_t delegate, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_uniffi_yniffi_fn_method_yrsundomanager_redo(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrsundomanager_remove_origin(void*_Nonnull ptr, RustBuffer origin, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_uniffi_yniffi_fn_method_yrsundomanager_undo(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_method_yrsundomanager_wrap_changes(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_uniffi_yniffi_fn_init_callback_yrsarrayeachdelegate(ForeignCallback _Nonnull handle
);
void uniffi_uniffi_yniffi_fn_init_callback_yrsarrayobservationdelegate(ForeignCallback _Nonnull handle
);
void uniffi_uniffi_yniffi_fn_init_callback_yrsmapiteratordelegate(ForeignCallback _Nonnull handle
);
void uniffi_uniffi_yniffi_fn_init_callback_yrsmapkviteratordelegate(ForeignCallback _Nonnull handle
);
void uniffi_uniffi_yniffi_fn_init_callback_yrsmapobservationdelegate(ForeignCallback _Nonnull handle
);
void uniffi_uniffi_yniffi_fn_init_callback_yrstextobservationdelegate(ForeignCallback _Nonnull handle
);
void uniffi_uniffi_yniffi_fn_init_callback_yrsundomanagerobservationdelegate(ForeignCallback _Nonnull handle
);
RustBuffer ffi_uniffi_yniffi_rustbuffer_alloc(int32_t size, RustCallStatus *_Nonnull out_status
);
RustBuffer ffi_uniffi_yniffi_rustbuffer_from_bytes(ForeignBytes bytes, RustCallStatus *_Nonnull out_status
);
void ffi_uniffi_yniffi_rustbuffer_free(RustBuffer buf, RustCallStatus *_Nonnull out_status
);
RustBuffer ffi_uniffi_yniffi_rustbuffer_reserve(RustBuffer buf, int32_t additional, RustCallStatus *_Nonnull out_status
);
void ffi_uniffi_yniffi_rust_future_poll_u8(void* _Nonnull handle, UniFfiRustFutureContinuation _Nonnull callback, void* _Nonnull callback_data
);
void ffi_uniffi_yniffi_rust_future_cancel_u8(void* _Nonnull handle
);
void ffi_uniffi_yniffi_rust_future_free_u8(void* _Nonnull handle
);
uint8_t ffi_uniffi_yniffi_rust_future_complete_u8(void* _Nonnull handle, RustCallStatus *_Nonnull out_status
);
void ffi_uniffi_yniffi_rust_future_poll_i8(void* _Nonnull handle, UniFfiRustFutureContinuation _Nonnull callback, void* _Nonnull callback_data
);
void ffi_uniffi_yniffi_rust_future_cancel_i8(void* _Nonnull handle
);
void ffi_uniffi_yniffi_rust_future_free_i8(void* _Nonnull handle
);
int8_t ffi_uniffi_yniffi_rust_future_complete_i8(void* _Nonnull handle, RustCallStatus *_Nonnull out_status
);
void ffi_uniffi_yniffi_rust_future_poll_u16(void* _Nonnull handle, UniFfiRustFutureContinuation _Nonnull callback, void* _Nonnull callback_data
);
void ffi_uniffi_yniffi_rust_future_cancel_u16(void* _Nonnull handle
);
void ffi_uniffi_yniffi_rust_future_free_u16(void* _Nonnull handle
);
uint16_t ffi_uniffi_yniffi_rust_future_complete_u16(void* _Nonnull handle, RustCallStatus *_Nonnull out_status
);
void ffi_uniffi_yniffi_rust_future_poll_i16(void* _Nonnull handle, UniFfiRustFutureContinuation _Nonnull callback, void* _Nonnull callback_data
);
void ffi_uniffi_yniffi_rust_future_cancel_i16(void* _Nonnull handle
);
void ffi_uniffi_yniffi_rust_future_free_i16(void* _Nonnull handle
);
int16_t ffi_uniffi_yniffi_rust_future_complete_i16(void* _Nonnull handle, RustCallStatus *_Nonnull out_status
);
void ffi_uniffi_yniffi_rust_future_poll_u32(void* _Nonnull handle, UniFfiRustFutureContinuation _Nonnull callback, void* _Nonnull callback_data
);
void ffi_uniffi_yniffi_rust_future_cancel_u32(void* _Nonnull handle
);
void ffi_uniffi_yniffi_rust_future_free_u32(void* _Nonnull handle
);
uint32_t ffi_uniffi_yniffi_rust_future_complete_u32(void* _Nonnull handle, RustCallStatus *_Nonnull out_status
);
void ffi_uniffi_yniffi_rust_future_poll_i32(void* _Nonnull handle, UniFfiRustFutureContinuation _Nonnull callback, void* _Nonnull callback_data
);
void ffi_uniffi_yniffi_rust_future_cancel_i32(void* _Nonnull handle
);
void ffi_uniffi_yniffi_rust_future_free_i32(void* _Nonnull handle
);
int32_t ffi_uniffi_yniffi_rust_future_complete_i32(void* _Nonnull handle, RustCallStatus *_Nonnull out_status
);
void ffi_uniffi_yniffi_rust_future_poll_u64(void* _Nonnull handle, UniFfiRustFutureContinuation _Nonnull callback, void* _Nonnull callback_data
);
void ffi_uniffi_yniffi_rust_future_cancel_u64(void* _Nonnull handle
);
void ffi_uniffi_yniffi_rust_future_free_u64(void* _Nonnull handle
);
uint64_t ffi_uniffi_yniffi_rust_future_complete_u64(void* _Nonnull handle, RustCallStatus *_Nonnull out_status
);
void ffi_uniffi_yniffi_rust_future_poll_i64(void* _Nonnull handle, UniFfiRustFutureContinuation _Nonnull callback, void* _Nonnull callback_data
);
void ffi_uniffi_yniffi_rust_future_cancel_i64(void* _Nonnull handle
);
void ffi_uniffi_yniffi_rust_future_free_i64(void* _Nonnull handle
);
int64_t ffi_uniffi_yniffi_rust_future_complete_i64(void* _Nonnull handle, RustCallStatus *_Nonnull out_status
);
void ffi_uniffi_yniffi_rust_future_poll_f32(void* _Nonnull handle, UniFfiRustFutureContinuation _Nonnull callback, void* _Nonnull callback_data
);
void ffi_uniffi_yniffi_rust_future_cancel_f32(void* _Nonnull handle
);
void ffi_uniffi_yniffi_rust_future_free_f32(void* _Nonnull handle
);
float ffi_uniffi_yniffi_rust_future_complete_f32(void* _Nonnull handle, RustCallStatus *_Nonnull out_status
);
void ffi_uniffi_yniffi_rust_future_poll_f64(void* _Nonnull handle, UniFfiRustFutureContinuation _Nonnull callback, void* _Nonnull callback_data
);
void ffi_uniffi_yniffi_rust_future_cancel_f64(void* _Nonnull handle
);
void ffi_uniffi_yniffi_rust_future_free_f64(void* _Nonnull handle
);
double ffi_uniffi_yniffi_rust_future_complete_f64(void* _Nonnull handle, RustCallStatus *_Nonnull out_status
);
void ffi_uniffi_yniffi_rust_future_poll_pointer(void* _Nonnull handle, UniFfiRustFutureContinuation _Nonnull callback, void* _Nonnull callback_data
);
void ffi_uniffi_yniffi_rust_future_cancel_pointer(void* _Nonnull handle
);
void ffi_uniffi_yniffi_rust_future_free_pointer(void* _Nonnull handle
);
void*_Nonnull ffi_uniffi_yniffi_rust_future_complete_pointer(void* _Nonnull handle, RustCallStatus *_Nonnull out_status
);
void ffi_uniffi_yniffi_rust_future_poll_rust_buffer(void* _Nonnull handle, UniFfiRustFutureContinuation _Nonnull callback, void* _Nonnull callback_data
);
void ffi_uniffi_yniffi_rust_future_cancel_rust_buffer(void* _Nonnull handle
);
void ffi_uniffi_yniffi_rust_future_free_rust_buffer(void* _Nonnull handle
);
RustBuffer ffi_uniffi_yniffi_rust_future_complete_rust_buffer(void* _Nonnull handle, RustCallStatus *_Nonnull out_status
);
void ffi_uniffi_yniffi_rust_future_poll_void(void* _Nonnull handle, UniFfiRustFutureContinuation _Nonnull callback, void* _Nonnull callback_data
);
void ffi_uniffi_yniffi_rust_future_cancel_void(void* _Nonnull handle
);
void ffi_uniffi_yniffi_rust_future_free_void(void* _Nonnull handle
);
void ffi_uniffi_yniffi_rust_future_complete_void(void* _Nonnull handle, RustCallStatus *_Nonnull out_status
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsarray_each(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsarray_get(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsarray_insert(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsarray_insert_range(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsarray_length(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsarray_observe(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsarray_push_back(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsarray_push_front(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsarray_raw_ptr(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsarray_remove(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsarray_remove_range(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsarray_to_a(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsdoc_encode_diff_v1(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsdoc_get_array(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsdoc_get_map(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsdoc_get_text(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsdoc_transact(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsdoc_undo_manager(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsmap_clear(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsmap_contains_key(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsmap_each(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsmap_get(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsmap_insert(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsmap_keys(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsmap_length(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsmap_observe(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsmap_raw_ptr(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsmap_remove(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsmap_values(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrstext_append(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrstext_format(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrstext_get_string(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrstext_insert(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrstext_insert_embed(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrstext_insert_embed_with_attributes(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrstext_insert_with_attributes(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrstext_length(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrstext_observe(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrstext_raw_ptr(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrstext_remove_range(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrstransaction_free(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrstransaction_origin(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrstransaction_transaction_apply_update(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrstransaction_transaction_encode_state_as_update(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrstransaction_transaction_encode_state_as_update_from_sv(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrstransaction_transaction_encode_update(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrstransaction_transaction_get_array(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrstransaction_transaction_get_map(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrstransaction_transaction_get_text(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrstransaction_transaction_state_vector(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsundoevent_has_changed(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsundoevent_kind(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsundoevent_origin(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsundomanager_add_origin(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsundomanager_add_scope(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsundomanager_clear(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsundomanager_observe_added(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsundomanager_observe_popped(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsundomanager_observe_updated(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsundomanager_redo(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsundomanager_remove_origin(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsundomanager_undo(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsundomanager_wrap_changes(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_constructor_yrsdoc_new(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsarrayeachdelegate_call(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsarrayobservationdelegate_call(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsmapiteratordelegate_call(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsmapkviteratordelegate_call(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsmapobservationdelegate_call(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrstextobservationdelegate_call(void
    
);
uint16_t uniffi_uniffi_yniffi_checksum_method_yrsundomanagerobservationdelegate_call(void
    
);
uint32_t ffi_uniffi_yniffi_uniffi_contract_version(void
    
);


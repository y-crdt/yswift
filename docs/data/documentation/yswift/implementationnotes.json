{
  "abstract" : [
    {
      "text" : "Implementation details related to YSwift as a layer over Yrs",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/com.github.y-crdt.YSwift\/documentation\/YSwift"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/com.github.y-crdt.YSwift\/documentation\/YSwift\/ImplementationNotes"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "YSwift"
      }
    ],
    "role" : "article",
    "roleHeading" : "Article",
    "title" : "Implementation Notes"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "code" : "YSwift",
              "type" : "codeVoice"
            },
            {
              "text" : ", and it’s C library counterpart ",
              "type" : "text"
            },
            {
              "code" : "Yniffi",
              "type" : "codeVoice"
            },
            {
              "text" : ", layer over the Rust library ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/docs.rs\/yrs\/latest\/yrs\/",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " to provide cross platform functionality.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "Yrs",
              "type" : "codeVoice"
            },
            {
              "text" : " was written with the intention of being a common, cross-platform code base with implementation exposed through a variety of languages.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Not every capability of the features within Yrs are exposed through to YSwift.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "This document aims to provide some background to the details of what is and isn’t exposed, and how that may effect your use of YSwift.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Schema-and-Type-Support",
          "level" : 3,
          "text" : "Schema and Type Support",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Yrs is a Rust based implementation of the original algorithm as defined in Yjs.dev, written in JavaScript.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Since the original version was written in a dynamic language, the Rust implementation maintained that dynamic storage capability, but with some limitations.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Within Yrs, lists can contain different kinds of values within the same ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.y-crdt.YSwift\/documentation\/YSwift\/YArray",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Likewise with ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.y-crdt.YSwift\/documentation\/YSwift\/YMap",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ", the values are not constrained to a single type.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Maps are keyed only by the type ",
              "type" : "text"
            },
            {
              "code" : "String",
              "type" : "codeVoice"
            },
            {
              "text" : ", and do not support the use of arbitrary ",
              "type" : "text"
            },
            {
              "code" : "Hashable",
              "type" : "codeVoice"
            },
            {
              "text" : " types as keys.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "code" : "YSwift",
              "type" : "codeVoice"
            },
            {
              "text" : " further constrains this in its initial release by representing Swift types through the lens of the Codable interface.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Structs or class instances added to a ",
              "type" : "text"
            },
            {
              "code" : "YArray",
              "type" : "codeVoice"
            },
            {
              "text" : " or ",
              "type" : "text"
            },
            {
              "code" : "YMap",
              "type" : "codeVoice"
            },
            {
              "text" : " are processed through ",
              "type" : "text"
            },
            {
              "code" : "Codable",
              "type" : "codeVoice"
            },
            {
              "text" : " to store their JSON representations as a string within ",
              "type" : "text"
            },
            {
              "code" : "Yrs",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Strings-and-Index-Positions",
          "level" : 3,
          "text" : "Strings and Index Positions",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "identifier" : "doc:\/\/com.github.y-crdt.YSwift\/documentation\/YSwift\/YText",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " is a special-case of Array that is optimized for long runs of text.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Yrs represents this internally as UTF-8 characters.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "YText",
              "type" : "codeVoice"
            },
            {
              "text" : " index positions within an instance based on the UTF8 view of the corresponding Swift ",
              "type" : "text"
            },
            {
              "code" : "String",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "In Swift a ",
              "type" : "text"
            },
            {
              "code" : "String",
              "type" : "codeVoice"
            },
            {
              "text" : ", by comparison, bases its index position on Grapheme clusters - what is visually a single character.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "These characters do not always map 1:1 to UTF-8 characters.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "When working with Strings it is important to convert index locations correctly.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Use the type ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/developer.apple.com\/documentation\/swift\/string\/index",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " methods for converting into, and out of, index positions of UTF-8 views.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Transactions",
          "level" : 3,
          "text" : "Transactions",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "code" : "Yrs",
              "type" : "codeVoice"
            },
            {
              "text" : " supports both mutable and read-only transactions for interacting with shared data types.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "YSwift",
              "type" : "codeVoice"
            },
            {
              "text" : " exposes only the mutable transactions through it’s methods.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "YSwift",
              "type" : "codeVoice"
            },
            {
              "text" : " also implicitly creates those transactions, in some cases, although all the methods that read or update a shared data type accept a transaction that you might create directly.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Transactions in ",
              "type" : "text"
            },
            {
              "code" : "YSwift",
              "type" : "codeVoice"
            },
            {
              "text" : " are always created from a ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.y-crdt.YSwift\/documentation\/YSwift\/YDocument",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " instance.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/com.github.y-crdt.YSwift\/documentation\/YSwift\/YDocument",
        "doc:\/\/com.github.y-crdt.YSwift\/documentation\/YSwift\/Buffer",
        "doc:\/\/com.github.y-crdt.YSwift\/documentation\/YSwift\/SynchronizingDocuments"
      ],
      "title" : "Documents"
    }
  ]
, 
"references": {
"doc://com.github.y-crdt.YSwift/documentation/YSwift": {
  "abstract" : [
    {
      "text" : "Swift language bindings to Y-CRDT shared data types to sync and collaborate.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/com.github.y-crdt.YSwift\/documentation\/YSwift",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "YSwift",
  "type" : "topic",
  "url" : "\/documentation\/yswift"
},
"doc://com.github.y-crdt.YSwift/documentation/YSwift/Buffer": {
  "abstract" : [
    {
      "text" : "A contiguous buffer of bytes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Buffer"
    }
  ],
  "identifier" : "doc:\/\/com.github.y-crdt.YSwift\/documentation\/YSwift\/Buffer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Buffer"
    }
  ],
  "role" : "symbol",
  "title" : "Buffer",
  "type" : "topic",
  "url" : "\/documentation\/yswift\/buffer"
},
"doc://com.github.y-crdt.YSwift/documentation/YSwift/SynchronizingDocuments": {
  "abstract" : [
    {
      "text" : "Consistently merge content between two documents.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/com.github.y-crdt.YSwift\/documentation\/YSwift\/SynchronizingDocuments",
  "kind" : "article",
  "role" : "article",
  "title" : "Synchronizing Documents",
  "type" : "topic",
  "url" : "\/documentation\/yswift\/synchronizingdocuments"
},
"doc://com.github.y-crdt.YSwift/documentation/YSwift/YArray": {
  "abstract" : [
    {
      "text" : "A type that provides a list shared data type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "YArray"
    }
  ],
  "identifier" : "doc:\/\/com.github.y-crdt.YSwift\/documentation\/YSwift\/YArray",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "YArray"
    }
  ],
  "role" : "symbol",
  "title" : "YArray",
  "type" : "topic",
  "url" : "\/documentation\/yswift\/yarray"
},
"doc://com.github.y-crdt.YSwift/documentation/YSwift/YDocument": {
  "abstract" : [
    {
      "text" : "YDocument holds YSwift shared data types and coordinates collaboration and changes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "YDocument"
    }
  ],
  "identifier" : "doc:\/\/com.github.y-crdt.YSwift\/documentation\/YSwift\/YDocument",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "YDocument"
    }
  ],
  "role" : "symbol",
  "title" : "YDocument",
  "type" : "topic",
  "url" : "\/documentation\/yswift\/ydocument"
},
"doc://com.github.y-crdt.YSwift/documentation/YSwift/YMap": {
  "abstract" : [
    {
      "text" : "A type that provides a map shared data type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "YMap"
    }
  ],
  "identifier" : "doc:\/\/com.github.y-crdt.YSwift\/documentation\/YSwift\/YMap",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "YMap"
    }
  ],
  "role" : "symbol",
  "title" : "YMap",
  "type" : "topic",
  "url" : "\/documentation\/yswift\/ymap"
},
"doc://com.github.y-crdt.YSwift/documentation/YSwift/YText": {
  "abstract" : [
    {
      "text" : "A type that provides a text-oriented shared data type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "YText"
    }
  ],
  "identifier" : "doc:\/\/com.github.y-crdt.YSwift\/documentation\/YSwift\/YText",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "YText"
    }
  ],
  "role" : "symbol",
  "title" : "YText",
  "type" : "topic",
  "url" : "\/documentation\/yswift\/ytext"
},
"https://developer.apple.com/documentation/swift/string/index": {
  "identifier" : "https:\/\/developer.apple.com\/documentation\/swift\/string\/index",
  "title" : "String.Index",
  "titleInlineContent" : [
    {
      "text" : "String.Index",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.apple.com\/documentation\/swift\/string\/index"
},
"https://docs.rs/yrs/latest/yrs/": {
  "identifier" : "https:\/\/docs.rs\/yrs\/latest\/yrs\/",
  "title" : "Yrs",
  "titleInlineContent" : [
    {
      "text" : "Yrs",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.rs\/yrs\/latest\/yrs\/"
}
}
}